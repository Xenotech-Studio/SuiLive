using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;

#if UNITY_2021_2_OR_NEWER || NET5_0_OR_GREATER
using System.Buffers;
#else
using System.Net;
#endif


namespace OpenBLive.Runtime.Data
{
    public partial struct Packet
    {
        public static Packet WebRoomAuthority(long uid=0, int roomid=0, string token="",
            ProtocolVersion protocolVersion = ProtocolVersion.Brotli)
        {
            var authInfo = new
            {
                uid = uid,
                roomid = roomid,
                protover = (int)protocolVersion,
                buvid = "",
                platform = "web",
                type = 2,
                key = token
            };
            
            Debug.Log("WebRoom: WebRoomAuthority\n"+JsonConvert.SerializeObject(authInfo));

            string json = JsonConvert.SerializeObject(authInfo);
            var obj = Encoding.UTF8.GetBytes(json);

            return new Packet
            {
                Header = new PacketHeader
                {
                    Operation = Operation.Authority,
                    ProtocolVersion = ProtocolVersion.HeartBeat,
                    SequenceId = 1,
                    HeaderLength = PacketHeader.KPacketHeaderLength,
                    PacketLength = PacketHeader.KPacketHeaderLength + obj.Length
                },
                PacketBody = obj
            };
        }

        public static byte[] PredefinedWebRoomAuthority(int roomid = 0)
        {
            switch (roomid)
            {
                case 1768085830: return new byte[]
                {
                    0x00, 0x00, 0x01, 0x75, 0x00, 0x10, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01,
                    // JSON 字符串的十六进制表示
                    0x7b, 0x22, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x33, 0x35, 0x34, 0x36, 0x37, 0x33, 0x30, 0x32, 0x35,
                    0x39, 0x38, 0x31, 0x30, 0x34, 0x31, 0x31, 0x2c, 0x22, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22,
                    0x3a, 0x31, 0x37, 0x36, 0x38, 0x30, 0x38, 0x35, 0x38, 0x33, 0x30, 0x2c, 0x22, 0x70, 0x72, 0x6f,
                    0x74, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x3a, 0x33, 0x2c, 0x22, 0x62, 0x75, 0x76, 0x69, 0x64, 0x22,
                    0x3a, 0x22, 0x34, 0x42, 0x43, 0x31, 0x33, 0x31, 0x36, 0x43, 0x2d, 0x44, 0x36, 0x45, 0x46, 0x2d,
                    0x35, 0x33, 0x44, 0x33, 0x2d, 0x42, 0x31, 0x43, 0x32, 0x2d, 0x34, 0x43, 0x31, 0x30, 0x35, 0x46,
                    0x42, 0x36, 0x36, 0x43, 0x41, 0x45, 0x33, 0x32, 0x38, 0x39, 0x39, 0x69, 0x6e, 0x66, 0x6f, 0x63,
                    0x22, 0x2c, 0x22, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x3a, 0x22, 0x77, 0x65,
                    0x62, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x2c, 0x22, 0x6b, 0x65, 0x79,
                    0x22, 0x3a, 0x22, 0x67, 0x57, 0x38, 0x32, 0x6d, 0x73, 0x31, 0x5a, 0x69, 0x68, 0x78, 0x5a, 0x64,
                    0x69, 0x4d, 0x6e, 0x72, 0x35, 0x79, 0x4c, 0x44, 0x7a, 0x4e, 0x6d, 0x63, 0x38, 0x68, 0x50, 0x64,
                    0x30, 0x52, 0x39, 0x5a, 0x32, 0x4d, 0x71, 0x32, 0x57, 0x58, 0x4d, 0x68, 0x64, 0x44, 0x68, 0x4f,
                    0x35, 0x32, 0x50, 0x64, 0x79, 0x4f, 0x4c, 0x41, 0x34, 0x4f, 0x4e, 0x44, 0x5a, 0x7a, 0x37, 0x6a,
                    0x66, 0x68, 0x5f, 0x4c, 0x68, 0x35, 0x36, 0x5a, 0x6c, 0x52, 0x58, 0x72, 0x51, 0x2d, 0x69, 0x5a,
                    0x43, 0x76, 0x6b, 0x59, 0x74, 0x52, 0x43, 0x59, 0x6b, 0x52, 0x43, 0x44, 0x49, 0x67, 0x36, 0x35,
                    0x72, 0x6e, 0x33, 0x49, 0x4d, 0x4a, 0x4a, 0x50, 0x6d, 0x47, 0x4c, 0x63, 0x35, 0x2d, 0x42, 0x61,
                    0x53, 0x34, 0x5a, 0x6e, 0x49, 0x4f, 0x72, 0x72, 0x6c, 0x6f, 0x62, 0x36, 0x71, 0x72, 0x51, 0x30,
                    0x41, 0x71, 0x52, 0x47, 0x58, 0x72, 0x46, 0x5f, 0x6f, 0x66, 0x45, 0x73, 0x49, 0x51, 0x32, 0x69,
                    0x56, 0x45, 0x4e, 0x2d, 0x42, 0x53, 0x6d, 0x72, 0x56, 0x75, 0x49, 0x49, 0x48, 0x72, 0x75, 0x37,
                    0x46, 0x6e, 0x4c, 0x63, 0x65, 0x70, 0x34, 0x72, 0x78, 0x72, 0x2d, 0x5f, 0x68, 0x42, 0x38, 0x72,
                    0x57, 0x79, 0x46, 0x50, 0x35, 0x72, 0x32, 0x6b, 0x57, 0x46, 0x6b, 0x78, 0x45, 0x74, 0x38, 0x30,
                    0x73, 0x32, 0x38, 0x71, 0x70, 0x30, 0x59, 0x51, 0x4e, 0x48, 0x41, 0x54, 0x35, 0x56, 0x43, 0x4a,
                    0x58, 0x44, 0x5f, 0x22, 0x7d
                }; break;
                case 21523164: return new byte[] {
                    0x00, 0x00, 0x01, 0x68, 0x00, 0x10, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01,
                    // JSON字符串的十六进制表示
                    0x7b, 0x22, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x31, 0x39, 0x35, 0x31, 0x37, 0x34, 0x38, 0x30, 0x32,
                    0x2c, 0x22, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0x3a, 0x32, 0x31, 0x35, 0x32, 0x33, 0x31,
                    0x36, 0x34, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x3a, 0x33, 0x2c,
                    0x22, 0x62, 0x75, 0x76, 0x69, 0x64, 0x22, 0x3a, 0x22, 0x45, 0x30, 0x37, 0x44, 0x44, 0x38, 0x42,
                    0x35, 0x2d, 0x35, 0x41, 0x42, 0x46, 0x2d, 0x31, 0x43, 0x30, 0x41, 0x2d, 0x37, 0x33, 0x44, 0x38,
                    0x2d, 0x30, 0x37, 0x41, 0x46, 0x41, 0x46, 0x38, 0x43, 0x30, 0x41, 0x38, 0x33, 0x36, 0x32, 0x32,
                    0x39, 0x39, 0x69, 0x6e, 0x66, 0x6f, 0x63, 0x22, 0x2c, 0x22, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
                    0x72, 0x6d, 0x22, 0x3a, 0x22, 0x77, 0x65, 0x62, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22,
                    0x3a, 0x32, 0x2c, 0x22, 0x6b, 0x65, 0x79, 0x22, 0x3a, 0x22, 0x45, 0x57, 0x62, 0x68, 0x44, 0x4c,
                    0x39, 0x50, 0x51, 0x41, 0x39, 0x73, 0x59, 0x76, 0x45, 0x49, 0x4f, 0x34, 0x69, 0x6d, 0x67, 0x6b,
                    0x37, 0x5f, 0x59, 0x53, 0x43, 0x76, 0x75, 0x61, 0x6e, 0x74, 0x6a, 0x4a, 0x39, 0x36, 0x69, 0x4e,
                    0x7a, 0x4b, 0x68, 0x56, 0x4a, 0x4b, 0x51, 0x56, 0x48, 0x58, 0x35, 0x4d, 0x51, 0x62, 0x67, 0x53,
                    0x4a, 0x35, 0x45, 0x33, 0x43, 0x50, 0x35, 0x55, 0x66, 0x77, 0x65, 0x35, 0x35, 0x72, 0x73, 0x66,
                    0x45, 0x44, 0x44, 0x43, 0x43, 0x4a, 0x68, 0x4c, 0x5a, 0x61, 0x73, 0x52, 0x7a, 0x71, 0x6f, 0x43,
                    0x45, 0x56, 0x78, 0x4a, 0x6e, 0x42, 0x49, 0x42, 0x6e, 0x66, 0x78, 0x67, 0x30, 0x30, 0x6c, 0x45,
                    0x66, 0x74, 0x57, 0x38, 0x52, 0x6c, 0x51, 0x44, 0x59, 0x66, 0x55, 0x73, 0x70, 0x68, 0x6b, 0x65,
                    0x55, 0x7a, 0x74, 0x71, 0x2d, 0x5f, 0x79, 0x74, 0x41, 0x71, 0x51, 0x75, 0x75, 0x31, 0x30, 0x45,
                    0x78, 0x37, 0x4f, 0x6a, 0x6c, 0x75, 0x45, 0x39, 0x67, 0x35, 0x73, 0x6a, 0x64, 0x33, 0x75, 0x34,
                    0x45, 0x64, 0x47, 0x62, 0x4c, 0x59, 0x4f, 0x54, 0x4e, 0x70, 0x43, 0x65, 0x37, 0x4d, 0x51, 0x70,
                    0x67, 0x39, 0x55, 0x74, 0x43, 0x4b, 0x41, 0x48, 0x4d, 0x61, 0x59, 0x6f, 0x51, 0x68, 0x50, 0x59,
                    0x4f, 0x48, 0x31, 0x48, 0x66, 0x56, 0x52, 0x73, 0x6f, 0x4a, 0x76, 0x61, 0x5f, 0x63, 0x5f, 0x53,
                    0x50, 0x30, 0x51, 0x6d, 0x45, 0x3d, 0x22, 0x7d
                }; break;
                case 24910329: default: return new byte[] {
                    0x00, 0x00, 0x01, 0x48, 0x00, 0x10, 0x00, 0x01,
                    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01,
                    // 接下来的部分是JSON字符串的十六进制表示
                    0x7b, 0x22, 0x75, 0x69, 0x64, 0x22, 0x3a, 0x30, 0x2c, 0x22, 0x72, 0x6f, 0x6f, 0x6d, 0x69, 0x64, 0x22, 0x3a,
                    0x32, 0x34, 0x39, 0x31, 0x30, 0x33, 0x32, 0x39, 0x2c, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x76, 0x65, 0x72,
                    0x22, 0x3a, 0x33, 0x2c, 0x22, 0x62, 0x75, 0x76, 0x69, 0x64, 0x22, 0x3a, 0x22, 0x31, 0x33, 0x37, 0x36, 0x46,
                    0x31, 0x30, 0x35, 0x2d, 0x39, 0x39, 0x36, 0x45, 0x2d, 0x43, 0x38, 0x35, 0x36, 0x2d, 0x32, 0x36, 0x38, 0x36,
                    0x2d, 0x46, 0x45, 0x36, 0x35, 0x30, 0x30, 0x43, 0x36, 0x44, 0x45, 0x39, 0x45, 0x35, 0x33, 0x38, 0x34, 0x36,
                    0x69, 0x6e, 0x66, 0x6f, 0x63, 0x22, 0x2c, 0x22, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x3a,
                    0x22, 0x77, 0x65, 0x62, 0x22, 0x2c, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x32, 0x2c, 0x22, 0x6b, 0x65,
                    0x79, 0x22, 0x3a, 0x22, 0x55, 0x50, 0x4d, 0x37, 0x4c, 0x77, 0x49, 0x61, 0x39, 0x35, 0x54, 0x6e, 0x65, 0x42,
                    0x56, 0x75, 0x39, 0x35, 0x31, 0x49, 0x66, 0x78, 0x42, 0x33, 0x72, 0x4a, 0x7a, 0x32, 0x75, 0x59, 0x79, 0x69,
                    0x6c, 0x34, 0x64, 0x46, 0x58, 0x78, 0x52, 0x33, 0x65, 0x49, 0x56, 0x5f, 0x49, 0x6a, 0x67, 0x77, 0x77, 0x36,
                    0x6a, 0x69, 0x45, 0x77, 0x72, 0x6f, 0x5a, 0x4f, 0x47, 0x30, 0x32, 0x77, 0x4b, 0x6f, 0x69, 0x6a, 0x53, 0x76,
                    0x36, 0x47, 0x46, 0x4f, 0x38, 0x49, 0x41, 0x68, 0x5a, 0x61, 0x79, 0x4d, 0x61, 0x56, 0x49, 0x79, 0x6b, 0x48,
                    0x59, 0x6c, 0x6d, 0x33, 0x30, 0x50, 0x38, 0x32, 0x66, 0x36, 0x4c, 0x31, 0x6a, 0x5a, 0x36, 0x79, 0x62, 0x6c,
                    0x6d, 0x38, 0x64, 0x46, 0x4f, 0x69, 0x5f, 0x4b, 0x54, 0x32, 0x5a, 0x51, 0x7a, 0x6a, 0x6a, 0x78, 0x68, 0x57,
                    0x68, 0x79, 0x36, 0x52, 0x54, 0x78, 0x30, 0x48, 0x5a, 0x4c, 0x49, 0x71, 0x62, 0x68, 0x74, 0x31, 0x48, 0x47,
                    0x66, 0x35, 0x4f, 0x6e, 0x6a, 0x65, 0x6c, 0x38, 0x42, 0x4e, 0x36, 0x7a, 0x55, 0x41, 0x6c, 0x39, 0x68, 0x66,
                    0x4f, 0x6a, 0x62, 0x64, 0x62, 0x6a, 0x43, 0x45, 0x79, 0x31, 0x47, 0x79, 0x4a, 0x50, 0x45, 0x69, 0x35, 0x72,
                    0x37, 0x50, 0x73, 0x3d, 0x22, 0x7d
                };
                    
            }
        }
    }
}